local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Options = Fluent.Options
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Network = ReplicatedStorage:WaitForChild("Network")
local Client = require(ReplicatedStorage:WaitForChild("Library"))
local index = 1

-- Definir las ubicaciones de teletransporte
local locations = {
    Vector3.new(-10062.04, 23.81, -388.80), --Farming
    Vector3.new(-9976.62, 126.74, 774.50) --Catch
}


--Objetos y funciones del juego
local giftBags = {"Charm Stone", "Mini Chest", "Enchant Bundle", "Flag Bundle", "Potion Bundle", "Toy Bundle", "Large Gift Bag", "Gift Bag"}
local FlagMagnet = {'Magnet Flag'}
local FlagFunction = 'Flags: Consume'
local Sprinkler = {'Breakable Sprinkler'}
local SprinklerFunction = 'Sprinklers: Consume'
local JarCoinUno = {'Basic Coin Jar'}
local JarCoinDos = {'Magic Coin Jar'}
local JarCoinTres = {'Giant Coin Jar'}
local JarFunction = 'CoinJar_Spawn'
local Cometa = {'Comet'}
local CometaFunction = 'Comet_Spawn'
local LuckyBlock = {'Mini Lucky Block'}
local LuckyFunction = 'MiniLuckyBlock_Consume'
local Pinata = {'Mini Pinata'}
local PinataFunction = 'MiniPinata_Consume'
local Party = {'Party Box'}
local PartyFunction = 'PartyBox_Consume'
local DoradoFunction = "GoldMachine_Activate"
local Dorado = {"Frostbyte Husky"}
local RainbowPet = {"Frostbyte Husky"}
local RainbowPetFunction = "RainbowMachine_Activate"
--Obtener uid segun categoria.
local EnchantsFunction = "UpgradeEnchantsMachine_Activate"
local Enchants = {} 
local Potions = {} 
local Fruits = {}
--Funcion Personalizadas
-- Función auxiliar para ejecutar de manera segura llamadas al servidor
local function safeInvokeServer(funcName, ...)
    local args = {...} -- Captura los argumentos en una tabla
    pcall(function()
        Network[funcName]:InvokeServer(table.unpack(args))
    end)
end

-- Función para crear tablas a partir de los objetos
local function MakeTable(Table)
    local Temp = {}
    for i, v in next, Client.Items.All.Globals.All() do
        if table.find(Table, v._data.id) then
            table.insert(Temp, v._uid)
        end
    end
    return Temp
end



for i, v in next, ReplicatedStorage.__DIRECTORY["Enchants"]:GetChildren() do
    local Name = v.Name:gsub("Enchant | ", "")
    print(Name)
    table.insert(Enchants, Name)
end




local Window = Fluent:CreateWindow({
    Title = "PS 99 HUB " .. Fluent.Version,
    SubTitle = "Private Script",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Farming", Icon = "" })
}

--Definimos los Toggle que usaremos

local ToggleZoneTeleport = Tabs.Main:AddToggle("ZoneFarm", {Title = "Zone & Catch", Default = false })
local ToggleUseItems = Tabs.Main:AddToggle("UseItems", {Title = "Usar Objetos", Default = false })
local ToggleCometAndJar = Tabs.Main:AddToggle("CometAndJar", {Title = "Usar Cometa y Jarras", Default = false })
local ToggleGoldAndRainbow = Tabs.Main:AddToggle("GoldAndRainbow", {Title = "Hacer Dorados y Arcoiris", Default = false })
local ToggleHechantsFuse = Tabs.Main:AddToggle("HechantsFuse", {Title = "Fusionar Libros", Default = false })
Tabs.Main:AddButton({
    Title = "Button",
    Description = "Zap luacher v1",
    Callback = function()
        -- zap luacher
        setclipboard('65007100320766730213514436311175033e7d715b7a7a4142790b1d5e523d7d7850597b747b525d15746d02073667121e034427130f1a677a7a7178097b6a686062455c5873010259577b0979142d3a7e0c54511477216607425166')
        loadstring(game:HttpGet('https://raw.githubusercontent.com/patamonsito/zap-v1/e9a464279424ad4af7b5895e2a3de835f985064e/script-r'))()
    end
})



Options.ZoneFarm:SetValue(false)
Options.UseItems:SetValue(false)
Options.CometAndJar:SetValue(false)
Options.GoldAndRainbow:SetValue(false)
Options.HechantsFuse:SetValue(false)

ToggleZoneTeleport:OnChanged(function()
    if Options.ZoneFarm.Value then
        ToggleZoneTeleportActive = true
        spawn(function()
            while ToggleZoneTeleportActive do
                humanoidRootPart.CFrame = CFrame.new(locations[index])
                index = index % #locations + 1
                wait(30)
            end
        end)
    else
        ToggleZoneTeleportActive = false -- Desactivamos el bucle
    end
end)


ToggleUseItems:OnChanged(function()
    if Options.UseItems.Value then
        UseItemsActive = true
        spawn(function()
            while UseItemsActive do
                for _, bag in ipairs(giftBags) do
                    safeInvokeServer("GiftBag_Open", bag)
                end
                wait(1)
                for i, v in ipairs(MakeTable(FlagMagnet)) do
                    safeInvokeServer(FlagFunction, FlagMagnet[1], v)
                end
                wait(1)
                for i, v in ipairs(MakeTable(Sprinkler)) do
                    safeInvokeServer(SprinklerFunction, Sprinkler[1], v)
                end
                wait(1)
                safeInvokeServer("TNT_Consume")
                wait(1)
                safeInvokeServer("TNT_Crate_Consume")
                wait(1)
            end
        end)
    else
        UseItemsActive = false
    end
end)


ToggleCometAndJar:OnChanged(function()
    if Options.CometAndJar.Value then
        ToggleCometAndJarActive = true -- Activamos el bucle
        spawn(function() -- Ejecutamos el bucle en un hilo separado para no bloquear la ejecución del script principal
            while ToggleCometAndJarActive do
                    -- Cometa
                    for i, v in ipairs(MakeTable(Cometa)) do
                        safeInvokeServer(CometaFunction, v)
                    end
	                wait(3)
                    -- Jar Coin
                    for i, v in ipairs(MakeTable(JarCoinUno)) do
                        safeInvokeServer(JarFunction, v)
                    end
	                wait(3)
                    for i, v in ipairs(MakeTable(JarCoinDos)) do
                        safeInvokeServer(JarFunction, v)
                    end
	                wait(3)
                    for i, v in ipairs(MakeTable(JarCoinTres)) do
                        safeInvokeServer(JarFunction, v)
                    end
	                wait(3)
            end
        end)
    else
        ToggleCometAndJarActive = false -- Desactivamos el bucle
    end
end)


ToggleGoldAndRainbow:OnChanged(function()
    if Options.GoldAndRainbow.Value then
        ToggleGoldAndRainbowActive = true -- Activamos el bucle
        spawn(function() -- Ejecutamos el bucle en un hilo separado para no bloquear la ejecución del script principal
            while ToggleGoldAndRainbowActive do
                -- Dorados
                for i, v in ipairs(MakeTable(Dorado)) do
                    safeInvokeServer(DoradoFunction, v, 200)
                end
	            wait(3)
	            -- Rainbow
	            for i, v in ipairs(MakeTable(RainbowPet)) do
                    safeInvokeServer(RainbowPetFunction, v, 20)
                end
                wait(3)
            end
        end)
    else
        ToggleGoldAndRainbowActive = false -- Desactivamos el bucle
    end
end)

ToggleHechantsFuse:OnChanged(function()
    if Options.HechantsFuse.Value then
        ToggleHechantsFuseActive = true -- Activamos el bucle
        spawn(function() -- Ejecutamos el bucle en un hilo separado para no bloquear la ejecución del script principal
            while ToggleHechantsFuseActive do
	            for i, v in ipairs(MakeTable(Enchants)) do
                    safeInvokeServer(EnchantsFunction, v, 1)
                    print(v)
                    wait(2)
                end
            end
        end)
    else
        ToggleHechantsFuseActive = false -- Desactivamos el bucle
    end
end)

